#!/bin/sh
# Startup script for the Portspoof daemon using iptables
#
### BEGIN INIT INFO
# Provides:          portspoof
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Should-Start:      $network $syslog iptables
# Should-Stop:       $network $syslog iptables
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop Portspoof daemon
# Description:       Start/stop Portspoof daemon
### END INIT INFO

# Fallback configuration
DAEMON=/usr/local/bin/portspoof
CONFIG=/usr/local/etc/portspoof.conf
SIGNATURES=/usr/local/etc/portspoof_signatures

PS_UNFILTEREDPORTS="0:65535"
PS_INTERFACES="eth0"
PS_LISTENPORT=4444

setup_custom_rules() { :; }

# Exit if the daemon is not installed
[ -x "$DAEMON" ] || exit 0

. /lib/lsb/init-functions

# Load variable configuration file if present
[ -r /etc/default/portspoof ] && . /etc/default/portspoof

setup_iptables() {
  iptables -t nat -N PREPORTSPOOF 2> /dev/null
  iptables -t nat -F PREPORTSPOOF

  iptables -t nat -N PORTSPOOF 2> /dev/null
  iptables -t nat -F PORTSPOOF

  iptables -t nat -A PORTSPOOF -p tcp -j LOG --log-prefix 'PORTSPOOF ' --log-level 4
  iptables -t nat -A PORTSPOOF -p tcp -j REDIRECT --to-ports ${PS_LISTENPORT}
  iptables -t nat -A PORTSPOOF -p udp -j LOG --log-prefix 'PORTSPOOF ' --log-level 4
  iptables -t nat -A PORTSPOOF -p udp -j REDIRECT --to-ports ${PS_LISTENPORT}

  setup_custom_rules

  rules=$(iptables -t nat -vnL PREROUTING --line-numbers|grep "/\* PORTSPOOF-REDIRECT \*/"|awk '{ print $1 }'|tac)
  for rule in ${rules}; do
    iptables -t nat -D PREROUTING ${rule}
  done
  for int in ${PS_INTERFACES}; do
    for port in ${PS_UNFILTEREDPORTS}; do
      iptables -t nat -A PREPORTSPOOF -i ${int} -p tcp -m tcp --dport ${port} -j RETURN
      iptables -t nat -A PREPORTSPOOF -i ${int} -p udp -m udp --dport ${port} -j RETURN
    done

    iptables -t nat -A PREPORTSPOOF -p tcp -m tcp -i ${int} -j PORTSPOOF
    iptables -t nat -A PREPORTSPOOF -p udp -m udp -i ${int} -j PORTSPOOF

    iptables -t nat -A PREROUTING -i ${int} -j PREPORTSPOOF -m comment --comment "PORTSPOOF-REDIRECT"
  done
}

case "$1" in
start)
  if ! pidof portspoof > /dev/null; then
    count=$(iptables -t nat -N PREPORTSPOOF 2>&1|wc -l)

    # This is pretty precarious, but should do the trick.
    if [ "$count" -eq 0 ]; then
      log_daemon_msg "Setting up iptables rules"
      setup_iptables
    elif [ "$count" -eq 1 ]; then
      log_daemon_msg "iptables rules already loaded, skipping"
    else
      log_failure_msg "Failed loading iptables rules"
    fi

    log_daemon_msg "Starting Portspoof" "portspoof"
    $DAEMON -D -c $CONFIG -s $SIGNATURES
  else
    log_daemon_msg "Portspoof already running."
  fi
;;

stop)
  if pidof portspoof > /dev/null; then
    killall portspoof > /dev/null
    log_daemon_msg "Portspoof stopped"
  else
    log_daemon_msg "Portspoof not running"
  fi
;;

reload)
  log_daemon_msg "Reloading iptables rules"
  setup_iptables
;;

restart)
  $0 stop
  $0 start
;;

*)
  echo "Usage: $0 {start|stop|reload|restart}" >&2
  exit 1
esac
